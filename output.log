
OpenSBI v1.0-47-g474a9d4
   ____                    _____ ____ _____
  / __ \                  / ____|  _ \_   _|
 | |  | |_ __   ___ _ __ | (___ | |_) || |
 | |  | | '_ \ / _ \ '_ \ \___ \|  _ < | |
 | |__| | |_) |  __/ | | |____) | |_) || |_
  \____/| .__/ \___|_| |_|_____/|____/_____|
        | |
        |_|

Platform Name             : riscv-virtio,qemu
Platform Features         : medeleg
Platform HART Count       : 2
Platform IPI Device       : aclint-mswi
Platform Timer Device     : aclint-mtimer @ 10000000Hz
Platform Console Device   : uart8250
Platform HSM Device       : ---
Platform Reboot Device    : sifive_test
Platform Shutdown Device  : sifive_test
Firmware Base             : 0x80000000
Firmware Size             : 268 KB
Runtime SBI Version       : 0.3

Domain0 Name              : root
Domain0 Boot HART         : 1
Domain0 HARTs             : 0*,1*
Domain0 Region00          : 0x0000000002000000-0x000000000200ffff (I)
Domain0 Region01          : 0x0000000080000000-0x000000008007ffff ()
Domain0 Region02          : 0x0000000000000000-0xffffffffffffffff (R,W,X)
Domain0 Next Address      : 0x0000000080200000
Domain0 Next Arg1         : 0x0000000082200000
Domain0 Next Mode         : S-mode
Domain0 SysReset          : yes

Boot HART ID              : 1
Boot HART Domain          : root
Boot HART ISA             : rv64imafdcsuh
Boot HART Features        : scounteren,mcounteren,mcountinhibit,time,menvcfg,sstc
Boot HART PMP Count       : 16
Boot HART PMP Granularity : 4
Boot HART PMP Address Bits: 54
Boot HART MHPM Count      : 16
Boot HART MIDELEG         : 0x0000000000001666
Boot HART MEDELEG         : 0x0000000000f0b509
[0m[95m[init_bss:203] bssstart 0xFFFFFFFF80257000bssend 0xFFFFFFFF8076E07C
[0m[0m[34m[SDCard] write Sector start
[0mrun time-test
time-test: time/iteration: 0.000ns total time: 5962154578173ms
run lua_testcode.sh
testcase lua date.lua success
testcase lua file_io.lua success
testcase lua max_min.lua success
testcase lua random.lua success
testcase lua sin30.lua success
testcase lua remove.lua success
testcase lua round_num.lua success
testcase lua sort.lua success
testcase lua strings.lua success
run libc-bench
========== START entry-static.exe argv ==========
Pass!
========== END entry-static.exe argv ==========
========== START entry-static.exe basename ==========
Pass!
========== END entry-static.exe basename ==========
========== START entry-static.exe clocale_mbfuncs ==========
Pass!
========== END entry-static.exe clocale_mbfuncs ==========
========== START entry-static.exe clock_gettime ==========
Pass!
========== END entry-static.exe clock_gettime ==========
========== START entry-static.exe crypt ==========
Pass!
========== END entry-static.exe crypt ==========
========== START entry-static.exe dirname ==========
Pass!
========== END entry-static.exe dirname ==========
========== START entry-static.exe env ==========
Pass!
========== END entry-static.exe env ==========
========== START entry-static.exe fdopen ==========
[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0mPass!
========== END entry-static.exe fdopen ==========
========== START entry-static.exe fnmatch ==========
Pass!
========== END entry-static.exe fnmatch ==========
========== START entry-static.exe fscanf ==========
[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0mPass!
========== END entry-static.exe fscanf ==========
========== START entry-static.exe fwscanf ==========
[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0mPass!
========== END entry-static.exe fwscanf ==========
========== START entry-static.exe iconv_open ==========
Pass!
========== END entry-static.exe iconv_open ==========
========== START entry-static.exe inet_pton ==========
Pass!
========== END entry-static.exe inet_pton ==========
========== START entry-static.exe mbc ==========
Pass!
========== END entry-static.exe mbc ==========
========== START entry-static.exe memstream ==========
Pass!
========== END entry-static.exe memstream ==========
========== START entry-static.exe pthread_cancel_points ==========
FAIL pthread_cancel_points [status 1]
========== END entry-static.exe pthread_cancel_points ==========
========== START entry-static.exe pthread_cancel ==========
FAIL pthread_cancel [status 1]
========== END entry-static.exe pthread_cancel ==========
========== START entry-static.exe pthread_cond ==========
FAIL pthread_cond [status 1]
========== END entry-static.exe pthread_cond ==========
========== START entry-static.exe pthread_tsd ==========
FAIL pthread_tsd [status 1]
========== END entry-static.exe pthread_tsd ==========
========== START entry-static.exe qsort ==========
Pass!
========== END entry-static.exe qsort ==========
========== START entry-static.exe random ==========
Pass!
========== END entry-static.exe random ==========
========== START entry-static.exe search_hsearch ==========
Pass!
========== END entry-static.exe search_hsearch ==========
========== START entry-static.exe search_insque ==========
Pass!
========== END entry-static.exe search_insque ==========
========== START entry-static.exe search_lsearch ==========
Pass!
========== END entry-static.exe search_lsearch ==========
========== START entry-static.exe search_tsearch ==========
Pass!
========== END entry-static.exe search_tsearch ==========
========== START entry-static.exe setjmp ==========
src/functional/setjmp.c:62: sigismember(&set2, SIGUSR1)==1 failed: siglongjmp incorrectly restored mask
FAIL setjmp [status 1]
========== END entry-static.exe setjmp ==========
========== START entry-static.exe snprintf ==========
Pass!
========== END entry-static.exe snprintf ==========
========== START entry-static.exe socket ==========
src/functional/socket.c:21: bind(s, (void *)&sa, sizeof sa)==0 failed: errno = No error information
src/functional/socket.c:22: getsockname(s, (void *)&sa, (socklen_t[]){sizeof sa})==0 failed: errno = No error information
src/functional/socket.c:24: setsockopt(s, 1, 20, &(struct timeval){.tv_usec=1}, sizeof(struct timeval))==0 failed: errno = No error information
src/functional/socket.c:29: sendto(c, "x", 1, 0, (void *)&sa, sizeof sa)==1 failed: errno = No error information
src/functional/socket.c:30: recvfrom(s, buf, sizeof buf, 0, (void *)&sa, (socklen_t[]){sizeof sa})==1 failed: errno = No error information
src/functional/socket.c:31: buf[0]=='x' failed: ' '
src/functional/socket.c:40: bind(s, (void *)&sa, sizeof sa)==0 failed: errno = No error information
src/functional/socket.c:41: getsockname(s, (void *)&sa, (socklen_t[]){sizeof sa})==0 failed: errno = No error information
src/functional/socket.c:44: listen(s, 1)==0 failed: errno = No error information
src/functional/socket.c:49: connect(c, (void *)&sa, sizeof sa)==0 || (*__errno_location())==115 failed: errno = No error information
FAIL socket [status 1]
========== END entry-static.exe socket ==========
========== START entry-static.exe sscanf ==========
Pass!
========== END entry-static.exe sscanf ==========
========== START entry-static.exe sscanf_long ==========
FAIL sscanf_long [status 1]
========== END entry-static.exe sscanf_long ==========
========== START entry-static.exe stat ==========
src/functional/stat.c:27: stat("/dev/null",&st)==0 failed: errno = Operation not permitted
[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0mFAIL stat [status 1]
========== END entry-static.exe stat ==========
========== START entry-static.exe strftime ==========
Pass!
========== END entry-static.exe strftime ==========
========== START entry-static.exe string ==========
Pass!
========== END entry-static.exe string ==========
========== START entry-static.exe string_memcpy ==========
Pass!
========== END entry-static.exe string_memcpy ==========
========== START entry-static.exe string_memmem ==========
Pass!
========== END entry-static.exe string_memmem ==========
========== START entry-static.exe string_memset ==========
Pass!
========== END entry-static.exe string_memset ==========
========== START entry-static.exe string_strchr ==========
Pass!
========== END entry-static.exe string_strchr ==========
========== START entry-static.exe string_strcspn ==========
Pass!
========== END entry-static.exe string_strcspn ==========
========== START entry-static.exe string_strstr ==========
Pass!
========== END entry-static.exe string_strstr ==========
========== START entry-static.exe strptime ==========
Pass!
========== END entry-static.exe strptime ==========
========== START entry-static.exe strtod ==========
Pass!
========== END entry-static.exe strtod ==========
========== START entry-static.exe strtod_simple ==========
Pass!
========== END entry-static.exe strtod_simple ==========
========== START entry-static.exe strtof ==========
Pass!
========== END entry-static.exe strtof ==========
========== START entry-static.exe strtol ==========
Pass!
========== END entry-static.exe strtol ==========
========== START entry-static.exe strtold ==========
Pass!
========== END entry-static.exe strtold ==========
========== START entry-static.exe swprintf ==========
Pass!
========== END entry-static.exe swprintf ==========
========== START entry-static.exe tgmath ==========
Pass!
========== END entry-static.exe tgmath ==========
========== START entry-static.exe time ==========
Pass!
========== END entry-static.exe time ==========
========== START entry-static.exe tls_align ==========
Pass!
========== END entry-static.exe tls_align ==========
========== START entry-static.exe udiv ==========
Pass!
========== END entry-static.exe udiv ==========
========== START entry-static.exe ungetc ==========
[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0mPass!
========== END entry-static.exe ungetc ==========
========== START entry-static.exe utime ==========
src/functional/utime.c:21: utimensat(AT_FDCWD, "/dev/null/invalid", ((struct timespec[2]){{.tv_nsec=UTIME_OMIT},{.tv_nsec=UTIME_OMIT}}), 0)==0 || errno==ENOTDIR failed: Network is down
src/functional/utime.c:23: futimens(-1, ((struct timespec[2]){{.tv_nsec=UTIME_OMIT},{.tv_nsec=UTIME_OMIT}}))==0 || errno==EBADF failed: Operation not permitted
src/functional/utime.c:29: futimens(fd, (struct timespec[2]){0}) == 0 failed: 
src/functional/utime.c:36: futimens(fd, ((struct timespec[2]){{.tv_sec=1,.tv_nsec=UTIME_OMIT},{.tv_sec=1,.tv_nsec=UTIME_OMIT}})) == 0 failed: 
src/functional/utime.c:45: futimens(fd, ((struct timespec[2]){{.tv_nsec=UTIME_NOW},{.tv_nsec=UTIME_OMIT}})) == 0 failed: 
src/functional/utime.c:47: st.st_atim.tv_sec >= t failed: 0
src/functional/utime.c:51: futimens(fd, (struct timespec[2]){0}) == 0 failed: 
src/functional/utime.c:52: futimens(fd, ((struct timespec[2]){{.tv_nsec=UTIME_OMIT},{.tv_nsec=UTIME_NOW}})) == 0 failed: 
src/functional/utime.c:55: st.st_mtim.tv_sec >= t failed: 0
src/functional/utime.c:57: futimens(fd, ((struct timespec[2]){{.tv_nsec=UTIME_NOW},{.tv_nsec=UTIME_OMIT}})) == 0 failed: 
src/functional/utime.c:59: st.st_atim.tv_sec >= t failed: 0
src/functional/utime.c:60: st.st_mtim.tv_sec >= t failed: 0
src/functional/utime.c:63: futimens(fd, ((struct timespec[2]){{.tv_sec=1LL<<32},{.tv_sec=1LL<<32}})) == 0 failed: Operation not permitted
FAIL utime [status 1]
========== END entry-static.exe utime ==========
========== START entry-static.exe wcsstr ==========
Pass!
========== END entry-static.exe wcsstr ==========
========== START entry-static.exe wcstol ==========
Pass!
========== END entry-static.exe wcstol ==========
========== START entry-static.exe pleval ==========
Pass!
========== END entry-static.exe pleval ==========
========== START entry-static.exe daemon_failure ==========
src/regression/daemon-failure.c:52: daemon should have failed with 24 [EMFILE] got 1 [Operation not permitted]
src/regression/daemon-failure.c:66: child exited with 1
src/regression/daemon-failure.c:73: child failed
FAIL daemon_failure [status 1]
========== END entry-static.exe daemon_failure ==========
========== START entry-static.exe dn_expand_empty ==========
Pass!
========== END entry-static.exe dn_expand_empty ==========
========== START entry-static.exe dn_expand_ptr_0 ==========
Pass!
========== END entry-static.exe dn_expand_ptr_0 ==========
========== START entry-static.exe fflush_exit ==========
[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0mFAIL fflush_exit [status 1]
========== END entry-static.exe fflush_exit ==========
========== START entry-static.exe fgets_eof ==========
Pass!
========== END entry-static.exe fgets_eof ==========
========== START entry-static.exe fgetwc_buffering ==========
Pass!
========== END entry-static.exe fgetwc_buffering ==========
========== START entry-static.exe fpclassify_invalid_ld80 ==========
Pass!
========== END entry-static.exe fpclassify_invalid_ld80 ==========
========== START entry-static.exe ftello_unflushed_append ==========
[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0m[0m[34m[SDCard] write Sector start
[0mPass!
========== END entry-static.exe ftello_unflushed_append ==========
========== START entry-static.exe getpwnam_r_crash ==========
Pass!
========== END entry-static.exe getpwnam_r_crash ==========
========== START entry-static.exe getpwnam_r_errno ==========
Pass!
========== END entry-static.exe getpwnam_r_errno ==========
========== START entry-static.exe iconv_roundtrips ==========
QEMU: Terminated
